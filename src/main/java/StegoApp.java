import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.swing.JFrame;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class StegoApp extends JFrame {
	private static final long serialVersionUID = 3435834331243258096L;
	public static BufferedImage testImage, coverImage, qrCode,
								oneBitStegoImage, threeBitStegoImage, fiveBitStegoImage,
								qrCodeOneBit, qrCodeThreeBit, qrCodeFiveBit,
								oneBitDifference, threeBitDifference, fiveBitDifference,
								oneNStegoImage, twoNStegoImage, threeNStegoImage,
								qrCodeOneN, qrCodeTwoN, qrCodeThreeN,
								oneNDifference, twoNDifference, threeNDifference,
								oneBitOPAPStegoImage, threeBitOPAPStegoImage, fiveBitOPAPStegoImage,
								qrCodeOneBitOPAP, qrCodeThreeBitOPAP, qrCodeFiveBitOPAP,
								oneBitOPAPDifference, threeBitOPAPDifference, fiveBitOPAPDifference,
								histoStegoLSB, histoDifLSB, histoStegoOPAP, histoDifOPAP, histoStegoEMD, histoDifEMD;

	public static void main(String[] args) {
        try {
           coverImage = ImageIO.read(new File("assets/16.pgm"));

        } catch (IOException e) {
            System.out.println("Could not generate QR Code or load image, IOException :: " + e.getMessage());
        }
        
		new StegoApp("StegoCompare");

    } // end main
	
	public StegoApp(String title) {
		super(title);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		UI mainPanel = new UI(null);
		this.add(mainPanel);
		this.pack();
		this.setLocationRelativeTo(null);
		this.setVisible(true);		
	}
	
	public static BufferedImage getNewImage() throws IOException {
		BufferedImage newImage;
		int random = new Random().nextInt(19) + 1;
		newImage = ImageIO.read(new File("assets/" + random + ".pgm"));
		return newImage;	
	}
}
